/* Generated by Opal 0.5.5 */
(function($opal) {
  var $a, self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $klass = $opal.klass;
  $opal.add_stubs(['$attr_reader', '$new', '$eval', '$instance_eval', '$to_proc']);
  return (function($base, $super) {
    function $ScraperScope(){};
    var self = $ScraperScope = $klass($base, $super, 'ScraperScope', $ScraperScope);

    var def = $ScraperScope._proto, $scope = $ScraperScope._scope;
    self.$attr_reader("node", "url");

    def.$initialize = function(node, url) {
      var $a, self = this;
      self.node = (($a = $scope.XMLNode) == null ? $opal.cm('XMLNode') : $a).$new(node);
      return self.url = url;
    };

    return ($opal.defs(self, '$builder', function(doc, url, script) {
      var $a, $b, self = this, scope = nil, block = nil;
      scope = self.$new(doc, url);
      block = self.$eval("lambda { " + (script) + " }");
      return ($a = ($b = scope).$instance_eval, $a._p = block.$to_proc(), $a).call($b);
    }), nil);
  })(self, (($a = $scope.BasicObject) == null ? $opal.cm('BasicObject') : $a))
})(Opal);

//@ sourceMappingURL=/__opal_source_maps__/scraper_scope.js.map
;
/* Generated by Opal 0.5.5 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice;
  $opal.add_stubs([]);
  return true
})(Opal);

//@ sourceMappingURL=/__opal_source_maps__/scraper_kit.js.map
;
